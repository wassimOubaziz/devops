version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - auth-service
      - project-service
      - task-service
      - user-service
    environment:
      - REACT_APP_AUTH_SERVICE_URL=http://auth-service:3001
      - REACT_APP_PROJECT_SERVICE_URL=http://project-service:3002
      - REACT_APP_TASK_SERVICE_URL=http://task-service:3003
      - REACT_APP_USER_SERVICE_URL=http://user-service:4003
    networks:
      - app-network

  auth-service:
    build:
      context: ./backend/services/auth-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=authdb
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  project-service:
    build:
      context: ./backend/services/project-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    depends_on:
      - postgres
    environment:
      - NODE_ENV=development
      - PORT=3002
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=projectdb
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  task-service:
    build:
      context: ./backend/services/task-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    depends_on:
      - postgres
    environment:
      - NODE_ENV=development
      - PORT=3003
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=taskdb
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  user-service:
    build:
      context: ./backend/services/user-service
      dockerfile: Dockerfile
    ports:
      - "4003:4003"
    depends_on:
      - postgres
    environment:
      - NODE_ENV=development
      - PORT=4003
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=userdb
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:4003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=authdb,projectdb,taskdb,userdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
